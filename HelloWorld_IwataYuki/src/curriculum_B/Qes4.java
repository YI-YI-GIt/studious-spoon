package curriculum_B;

import java.util.Scanner;

public class Qes4 {

	public static void main(String[] args) {
		
		
	/*************************************************************:
	 * 問１ int 型の配列 を作成し、1, 2, 3, 4, 5 を格納する
	 * 配列の全要素を 順番に表示
	 *************************************************************/
		
		// int型の配列を作成して１～５を格納
		int[] number = new int[5];
		number[0] = 1;
		number[1] = 2;
		number[2] = 3;
		number[3] = 4;
		number[4] = 5;
		
		// 配列を順番に表示
		for (int i = 0; i < 5; i++) {
			System.out.println(number[i]);
		}
		
	/*************************************************************:
	 * 問２ int 型の配列 {10, 20, 30, 40, 50} を用意する
	 * 配列の全要素を 逆順に表示
	 *************************************************************/
		
		// int型の配列を作成して値を格納
		int[] num1 = {10, 20, 30, 40, 50};
		
		// 配列を逆順に表示
		for (int i = 4; i >= 0; i--) {
			System.out.println(num1[i]);
		}
		
	/*************************************************************:
	 * 問３ int 型の配列 {3, 5, 7, 9, 11} を用意する
	 * 配列の全要素の 合計値 を計算し、表示
	 *************************************************************/
		
		// int型の配列を作成して値を格納
		int[] num2 = {3, 5, 7, 9, 11};
		
		// 合計値を計算
		int sum = 0;// 初期化
		for (int i = 0; i < num2.length; i++) {
			sum += num2[i];
		} System.out.println("合計値: " + sum);
		
		
	/*************************************************************:
	 * 問４ int 型の配列 {12, 7, 9, 21, 5, 18} を用意する
	 * 配列の 最大値と最小値 を求めて表示
	 *************************************************************/	
		
		// int型の配列を作成して値を格納
		int[] num3 = {12, 7, 9, 21, 5, 18};
		
		// 初期化
		int max = num3[0];
		int min = num3[0];
		
		// ループ処理
		for (int i = 1; i < num3.length; i++) {
			if (num3[i] > max) {
				max = num3[i];
			}
			if (num3[i] < min) {
				min = num3[i];
			}
		} System.out.println("最大値: " + max);
		  System.out.println("最小値: " + min);		
		  
		  
	 /*************************************************************:
	 * 問５ int 型の配列 {1, 2, 3, 4, 5} を用意する
	 * 配列のすべての要素を 2 倍 し、結果を表示
	 * 結果を表示する際の処理に拡張for文を使用してください
	 **************************************************************/
		
		int[] num4 = {1, 2, 3, 4, 5};
		
		// ループ処理＆×２の計算
		for (int i = 0; i < num4.length; i++) {
			num4[i] = num4[i] * 2;
		}
		// 拡張for文
		for (int num : num4) {
			System.out.println(num);
		}		
		
	/*************************************************************:
	 * 問６ int 型の配列 {4, 7, 10, 15, 20} を用意する
	 * ユーザーが入力した数が 配列に含まれているか を判定し、結果を表示
	 * 結果：（”入力した値”は配列に含まれています／含まれていません）
	 **************************************************************/
		
		int[] num5 = {4, 7, 10, 15, 20};
		// Scanner　自由入力受付
		Scanner scanner = new Scanner(System.in);
		System.out.print("数値を入力: ");
		int input = scanner.nextInt();
		
		// ループ処理
		boolean found = false;
		
		for (int num : num5) {
			if (num == input) {
				found = true;
				break;// ループ終了
			}
		}
		
		if (found) {
			System.out.println(""+ input + " は配列に含まれています");
		} else {
			System.out.println(""+ input + " は配列に含まれていません");
		}
		
		scanner.close();
		
		
	/*************************************************************:
	 * 問７ 2次元配列 int[][] array = {{1, 2}, {3, 4}, {5, 6}}; を用意する
	 * 配列のすべての要素を表示
	 **************************************************************/
		
		// 二次元配列格納
		int[][] matrix = {
				{1, 2}, {3, 4}, {5, 6}
		};
		// 配列すべてをループ
		for (int i = 0; i < matrix.length; i++) {
			for (int j = 0; j < matrix[i].length; j++) {
				System.out.println(matrix[i][j] + " ");
			}
		System.out.println(); // 改行
		}		
		
	/*************************************************************:
	 * 問８ 2次元配列 int[][] array = {{10, 20, 30}, {40, 50, 60}, {70, 80, 90}}; を用意する
	 * 配列の すべての要素の合計値を表示
	 **************************************************************/
		
		int[][] array1 = {{10, 20, 30}, {40, 50, 60}, {70, 80, 90}};
		
		// ループと足し算
		sum = 0;
		for (int i =0; i < array1.length; i++) {
			for (int j = 0; j < array1[i].length; j++) {
				sum += array1[i][j];
			}
		}
		System.out.println("合計値: " + sum);
		
		
	/*************************************************************:
	 * 問９ 2次元配列 int[][] array = {{12, 15, 8}, {6, 19, 25}, {30, 2, 10}}; を用意する
	 * 配列内の 最大値と最小値 を求めて表示
	 **************************************************************/	
		
		int[][] array2 = {{12, 15, 8}, {6, 19, 25}, {30, 2, 10}};
		
		// 初期化
		int max2 = array2[0][0];
		int min2 = array2[0][0];
		
		// ループして配列すべてを検索、最大値と最小値を更新
		for (int i = 0; i < array2.length; i++) {
			for (int j = 0; j < array2[i].length; j++) {
				if (array2[i][j] > max2) {
					max2 = array2[i][j];
				}
				if (array2[i][j] < min2) {
					min2 = array2[i][j];
				}
			}
		}
		System.out.println("最大値: " + max2);
		System.out.println("最小値: " + min2);
		
	/*************************************************************:
	 * 問１０　3次元配列 int[][][] array = {{{1, 2}, {3, 4}}, {{5, 6}, {7, 8}}}; を用意する	
	 * 配列内のすべての要素を 表示
	 **************************************************************/
	
		int[][][] array3 = {{{1, 2}, {3, 4}}, {{5, 6}, {7, 8}}};
		
		
		for (int i = 0; i < array3.length; i++) { // 一次元目ループ
			for (int j = 0; j < array3[i].length; j++) {// 二次元目ループ
				for (int k = 0; k < array3[i][j].length; k++) {// 三次元目ループ
					System.out.println("array3[" + i + "][" + j + "][" + k + "] = " + array3[i][j][k]);
					}
				}
			}
		}	
	}
